generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id            String         @id @default(uuid())
  googleId      String?        @unique
  firstName     String
  lastName      String
  email         String         @unique
  password      String?
  refreshTokens RefreshToken[]
  taskGroups    TaskGroup[]
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  tasks         Task[]
}

model RefreshToken {
  id        String   @id @default(uuid())
  token     String   @unique
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
}

model TaskGroup {
  id        String   @id @default(uuid())
  name      String
  tasks     Task[]
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Task {
  id          String       @id @default(uuid())
  title       String
  description String?
  isCompleted Boolean      @default(false)
  priority    TaskPriority @default(MEDIUM)
  dueDate     DateTime?
  user        User         @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId      String
  taskGroup   TaskGroup    @relation(fields: [taskGroupId], references: [id], onDelete: Cascade)
  taskGroupId String
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
}

enum TaskPriority {
  HIGH
  MEDIUM
  LOW
}
